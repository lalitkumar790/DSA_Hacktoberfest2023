#include <iostream>

std::pair<int, int> rotate(int N, int D) {
    int bits = 16; // 16 bits as mentioned in the problem
    N = (N << D | N >> (bits - D)) & ((1 << bits) - 1); // Left rotation
    int left_rotation_decimal = N;

    N = ((N & ((1 << D) - 1)) << (bits - D)) | (N >> D); // Right rotation
    int right_rotation_decimal = N;

    return std::make_pair(left_rotation_decimal, right_rotation_decimal);
}

int main() {
    int N1 = 28, D1 = 2;
    std::pair<int, int> result1 = rotate(N1, D1);
    std::cout << "Example 1:\nLeft rotation result: " << result1.first << "\nRight rotation result: " << result1.second << std::endl;

    int N2 = 29, D2 = 2;
    std::pair<int, int> result2 = rotate(N2, D2);
    std::cout << "\nExample 2:\nLeft rotation result: " << result2.first << "\nRight rotation result: " << result2.second << std::endl;

    return 0;
}
